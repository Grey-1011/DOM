{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.1f2d8d72.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    // 输入create('<div><span>hi</span></div>')\r\n    // 自动创建好div 和 span\r\n    // innerHTML直接输入字符串\r\n    // 使用template是因为这个标签可以容纳所有标签\r\n    // 如果使用div,则div中是不能放<tr></tr>标签\r\n    create(string){\r\n        const container = document.createElement('template')\r\n        container.innerHTML = string.trim() // .trim()可以去除 文本text 元素\r\n        // console.log(container);\r\n        return container.content.firstChild// 如果用 template容器的话，是不能用children[0]获取到的，应用content.firstChild\r\n    },\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2, node.nextSibling)// 把node2 插入到node下一个节点的前面，如果node是最后一个节点，也是没有问题的\r\n\r\n    },\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node)// 把node放到node2的前面\r\n    },\r\n    append(parent,node){\r\n        parent.appendChild(node) // 新增儿子\r\n    },\r\n    wrap(node, parent){// 新增爸爸 \r\n        dom.before(node, parent)// 把parent 放到 node 前面\r\n        dom.append(parent,node)// 把 node 插入 parent里面\r\n    },\r\n    remove(node){\r\n        // node.parentNode.removeChild(node) // 删除节点  旧方法\r\n        node.remove(node)\r\n        return node\r\n    },\r\n    empty(node){ // 删除后代\r\n        const array = []\r\n        let x = node.firstChild\r\n        while(x){\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild // 让原来的第二个儿子，成为firstChild\r\n        }\r\n        return array\r\n    },\r\n    attr(node,name,value){ // 重载\r\n        if(arguments.length === 3){\r\n            node.setAttribute(name,value) // 设置title\r\n        }else if(arguments.length === 2){\r\n            return node.getAttribute(name) // 读取 title\r\n        }\r\n    },\r\n    text(node,string){ // 适配\r\n        if(arguments.length === 2){\r\n            if('innerText' in node){\r\n                node.innerText = string  // ie 改文本内容\r\n            }else{\r\n                node.textContent = string // firefox / chrome \r\n            }\r\n        }else if(arguments.length === 1){\r\n            if('innerText' in node){\r\n                return node.innerText\r\n            }else{\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n    html(node,string){\r\n        if(arguments.length === 2){\r\n            node.innerHTML = string //改html\r\n        }else if(arguments === 1){\r\n            return node.innerHTML // 读HTML\r\n        }\r\n    },\r\n    style(node,name,value){\r\n        if(arguments.length === 3){\r\n            // dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        }else if(arguments.length === 2){\r\n            if(typeof name === 'string'){\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            }else if(name instanceof Object){\r\n                const object = name\r\n                // dom.style(div,{color:'red'})\r\n                for(key in object){\r\n                    //key: border / color\r\n                    // node.style.border = ...\r\n                    // node.style.color = ...\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n    class:{\r\n        add(node,className){\r\n            node.classList.add(className) //添加class\r\n        },\r\n        remove(node,className){\r\n            node.classList.remove(className) //删除class\r\n        },\r\n        has(node,className){\r\n           return node.classList.contains(className)// 查看是否拥有\r\n        }\r\n    },\r\n    on(node,eventName,fn){\r\n        node.addEventListener(eventName,fn) // 添加事件监听\r\n    },\r\n    off(node,eventName,fn){\r\n        node.removeEventListener(eventName,fn) // 删除事件监听\r\n    },\r\n    find(selector,scope){ // 获取标签\r\n        //dom.find('.red',testDiv) 如果第二个参数 scope 存在，则在 scope.querySelectorAll里面找，否则，反之\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node){\r\n        return node.parentNode // 获取父元素\r\n    },\r\n    children(node){\r\n        return node.children // 获取子元素\r\n    },\r\n    siblings(node){\r\n        return Array.from(node.parentNode.children).filter(n=>n!==node) // 获取兄弟姐妹元素\r\n    },\r\n    next(node){\r\n        let x = node.nextSibling  // 获取下一个节点（去除文本节点）\r\n        while(x && x.nodeType === 3){\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n    previous(node){\r\n        let x = node.previousSibling  // 获取上一个节点（去除文本节点）\r\n        while(x && x.nodeType === 3){\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n    each(nodeList,fn){// 遍历所有节点\r\n        for(let i = 0; i<nodeList.length;i++){\r\n            fn.call(null,nodeList[i])\r\n        }\r\n    },\r\n    index(node){\r\n        const list = dom.children(node.parentNode)\r\n        let i // 注意i 的作用域\r\n        for(i = 0;i < list.length;i++){\r\n            if(list[i] === node){\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n}"]}